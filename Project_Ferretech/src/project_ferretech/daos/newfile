public static void crearVenta(JFrame parentFrame, JTable tablaVentas) {
    int idCliente;
    int idEmpleado;
    String fechaVenta;
    double total;

    try {
        idCliente = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el ID del cliente al que se le realizó la venta:"));
        idEmpleado = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el ID del empleado que realizó la venta:"));
        fechaVenta = JOptionPane.showInputDialog("Ingrese la fecha de la venta (YYYY-MM-DD):");
        total = Double.parseDouble(JOptionPane.showInputDialog("Ingrese el total de la venta:"));

        if (fechaVenta != null && !fechaVenta.trim().isEmpty()) {
            try (Connection con = ConexionOracle.getConnection(); 
                 CallableStatement stmt = con.prepareCall("{CALL INSERTAR_VENTA(?, ?, ?, ?, ?)}")) {

                stmt.setInt(1, obtenerNuevoID()); // Asegúrate de que este método sea accesible aquí
                stmt.setInt(2, idCliente);
                stmt.setInt(3, idEmpleado);
                stmt.setDate(4, Date.valueOf(fechaVenta));
                stmt.setDouble(5, total);
                stmt.execute();

                JOptionPane.showMessageDialog(parentFrame, "Venta registrada.");
                tablaVentas.setModel(obtenerVentas());

            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(parentFrame, "Error al registrar la venta.");
            }
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(parentFrame, "Error: Ingrese valores numéricos válidos.", "Error", JOptionPane.ERROR_MESSAGE);
    }
}





public static void editarVenta(JFrame parentFrame, JTable tablaVentas) {
    int fila = tablaVentas.getSelectedRow();
    if (fila == -1) {
        JOptionPane.showMessageDialog(parentFrame, "Seleccione una venta.");
        return;
    }

    int id = (int) tablaVentas.getValueAt(fila, 0);
    int idCliente;
    int idEmpleado;
    String fechaVenta;
    double total;

    try {
        idCliente = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el nuevo ID del cliente:", tablaVentas.getValueAt(fila, 1)));
        idEmpleado = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el nuevo ID del empleado:", tablaVentas.getValueAt(fila, 2)));
        fechaVenta = JOptionPane.showInputDialog("Ingrese la nueva fecha (YYYY-MM-DD):", tablaVentas.getValueAt(fila, 3));
        total = Double.parseDouble(JOptionPane.showInputDialog("Ingrese el nuevo total:", tablaVentas.getValueAt(fila, 4)));

        if (fechaVenta != null && !fechaVenta.trim().isEmpty()) {
            try (Connection con = ConexionOracle.getConnection(); 
                 CallableStatement stmt = con.prepareCall("{CALL ACTUALIZAR_VENTA(?, ?, ?, ?, ?)}")) {

                stmt.setInt(1, id);
                stmt.setInt(2, idCliente);
                stmt.setInt(3, idEmpleado);
                stmt.setDate(4, Date.valueOf(fechaVenta));
                stmt.setDouble(5, total);
                stmt.execute();

                JOptionPane.showMessageDialog(parentFrame, "Venta actualizada.");
                tablaVentas.setModel(obtenerVentas());
            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(parentFrame, "Error al actualizar la venta.");
            }
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(parentFrame, "Error: Ingrese valores numéricos válidos.", "Error", JOptionPane.ERROR_MESSAGE);
    }
}







public static void eliminarVenta(JFrame parentFrame, JTable tablaVentas) {
    int fila = tablaVentas.getSelectedRow();
    if (fila == -1) {
        JOptionPane.showMessageDialog(parentFrame, "Seleccione una venta.");
        return;
    }

    int id = (int) tablaVentas.getValueAt(fila, 0);

    int confirm = JOptionPane.showConfirmDialog(parentFrame, "¿Seguro que desea eliminar esta venta?", "Confirmar", JOptionPane.YES_NO_OPTION);
    if (confirm == JOptionPane.YES_OPTION) {
        try (Connection con = ConexionOracle.getConnection(); 
             CallableStatement stmt = con.prepareCall("{CALL ELIMINAR_VENTA(?)}")) {

            stmt.setInt(1, id);
            stmt.execute();

            JOptionPane.showMessageDialog(parentFrame, "Venta eliminada.");
            tablaVentas.setModel(obtenerVentas());
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(parentFrame, "Error al eliminar la venta.");
        }
    }
}


